{"version":3,"sources":["components/TransactionBanking/css/TransactionHistory.module.css","components/TransactionBanking/css/Dashboard.module.css","components/TransactionBanking/css/Balance.module.css","components/TransactionBanking/css/Controls.module.css","components/TransactionBanking/Notyfication.js","components/TransactionBanking/Controls.js","components/TransactionBanking/Balance.js","components/TransactionBanking/TransactionHistory.js","components/TransactionBanking/Dashboard.js","index.js"],"names":["module","exports","history","bgcHead","headList","listItem","dashboard","balance","amount","deposit","withdrawal","controls","input","btn","Notification","createNotification","type","NotificationManager","info","success","error","warning","Component","Controls","_ref","addingMoney","state","onDeposit","onWithdrawal","react_default","a","createElement","className","style","onChange","value","onClick","Balance","balanceCalculation","toLocaleString","TransactionHistory","items","length","map","item","key","id","date","notyfication","DEPOSIT","WITHDRAWAL","Dashboard","newTransaction","transaction","_this","setState","shortid","generate","Number","Date","handleAddingMoney","target","handleDeposit","resetField","prevState","concat","Object","toConsumableArray","handleWithdrawal","_this$state","_this$state2","reduce","acc","historyItems","localStorage","getItem","balanceHistory","JSON","parse","this","_this$state3","setItem","stringify","_this$state4","TransactionBanking_Controls","TransactionBanking_Balance","TransactionBanking_TransactionHistory","lib","ReactDOM","render","Dashboard_Dashboard","document","querySelector"],"mappings":"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","file":"static/js/main.84a79bc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__9syDK\",\"bgcHead\":\"TransactionHistory_bgcHead__1SNa4\",\"headList\":\"TransactionHistory_headList__1qvx3\",\"listItem\":\"TransactionHistory_listItem__2SMQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3Lew1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2YeIz\",\"amount\":\"Balance_amount__2f7z0\",\"deposit\":\"Balance_deposit__2tufc\",\"withdrawal\":\"Balance_withdrawal__neDMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3Suui\",\"input\":\"Controls_input__2Dw1H\",\"btn\":\"Controls_btn__2-069\"};","import { Component } from 'react';\nimport { NotificationManager } from 'react-notifications';\n\nexport default class Notification extends Component {\n  createNotification = type => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Введите сумму для проведения операции!');\n          break;\n\n        case 'success':\n          NotificationManager.success('Cпасибо за проведеную операцию!');\n          break;\n\n        case 'error':\n          NotificationManager.error(\n            'На счету недостаточно средств для проведения операции!',\n          );\n          break;\n\n        case 'warning':\n          NotificationManager.warning('warning');\n          break;\n\n        default:\n          break;\n      }\n    };\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './css/Controls.module.css';\n\nconst Controls = ({ addingMoney, state, onDeposit, onWithdrawal }) => (\n  <section className={style.controls}>\n    <input\n      className={style.input}\n      onChange={addingMoney}\n      value={state}\n      type=\"number\"\n    />\n    <button className={style.btn} onClick={onDeposit} type=\"button\">\n      Deposit\n    </button>\n    <button className={style.btn} onClick={onWithdrawal} type=\"button\">\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  addingMoney: PropTypes.func.isRequired,\n  onDeposit: PropTypes.func.isRequired,\n  onWithdrawal: PropTypes.func.isRequired,\n  state: PropTypes.string.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './css/Balance.module.css';\n\nconst Balance = ({ balance, balanceCalculation }) => (\n  <section className={style.balance}>\n    <p className={style.amount}>\n      <span className={style.deposit}>⬆</span>\n      {balanceCalculation().toLocaleString()}$\n    </p>\n    <p className={style.amount}>\n      <span className={style.withdrawal}>⬇</span>\n      {balanceCalculation().toLocaleString()}$\n    </p>\n    <p className={style.amount}>Balance: {balance.toLocaleString()}$</p>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  balanceCalculation: PropTypes.func.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './css/TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={style.history}>\n    <thead>\n      <tr className={style.bgcHead}>\n        <th className={style.headList}>Transaction</th>\n        <th className={style.headList}>Amount</th>\n        <th className={style.headList}>Date</th>\n      </tr>\n    </thead>\n    {items.length !== 0 &&\n      items.map(item => (\n        <tbody key={item.id}>\n          <tr>\n            <td className={style.listItem}>{item.type}</td>\n            <td className={style.listItem}>{item.amount}$</td>\n            <td className={style.listItem}>{item.date}</td>\n          </tr>\n        </tbody>\n      ))}\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { NotificationContainer } from 'react-notifications';\nimport Notification from './Notyfication';\nimport Controls from './Controls';\nimport Balance from './Balance';\nimport TransactionHistory from './TransactionHistory';\nimport style from './css/Dashboard.module.css';\nimport 'react-notifications/lib/notifications.css';\n\nconst notyfication = new Notification();\nconst DEPOSIT = 'Deposit';\nconst WITHDRAWAL = 'Withdrawal';\n\nexport default class Dashboard extends Component {\n  state = {\n    history: [],\n    balance: 0,\n    amount: '',\n    type: '',\n  };\n\n  componentDidMount() {\n    const historyItems = localStorage.getItem('items');\n    const balanceHistory = localStorage.getItem('balance');\n    const transaction = localStorage.getItem('type');\n\n    if (historyItems) {\n      const history = JSON.parse(historyItems);\n      const balance = JSON.parse(balanceHistory);\n      const type = JSON.parse(transaction);\n\n      this.setState({ history, balance, type });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { history, balance, type } = this.state;\n\n    if (prevState.history !== history) {\n      localStorage.setItem('items', JSON.stringify(history));\n      localStorage.setItem('balance', JSON.stringify(balance));\n      localStorage.setItem('type', JSON.stringify(type));\n    }\n  }\n\n  newTransaction = transaction => {\n    const { amount } = this.state;\n\n    this.setState({ type: transaction });\n\n    return {\n      id: shortid.generate(),\n      type: transaction,\n      amount: Number(amount),\n      date: new Date().toLocaleString(),\n    };\n  };\n\n  handleAddingMoney = ({ target }) => {\n    this.setState({\n      amount: target.value,\n    });\n  };\n\n  handleDeposit = () => {\n    const { amount } = this.state;\n\n    if (amount === '0' || amount === '') {\n      notyfication.createNotification('info')();\n      this.resetField();\n      return;\n    }\n\n    this.setState(prevState => ({\n      history: [...prevState.history, this.newTransaction(DEPOSIT)],\n      balance: prevState.balance + Number(amount),\n    }));\n    notyfication.createNotification('success')();\n    this.resetField();\n  };\n\n  handleWithdrawal = () => {\n    const { balance, amount } = this.state;\n\n    if (balance < amount) {\n      notyfication.createNotification('error')();\n      this.resetField();\n      return;\n    }\n\n    if (amount === '0' || amount === '') {\n      notyfication.createNotification('info')();\n      this.resetField();\n      return;\n    }\n\n    this.setState(prevState => ({\n      history: [...prevState.history, this.newTransaction(WITHDRAWAL)],\n      balance: prevState.balance - Number(amount),\n    }));\n    notyfication.createNotification('success')();\n    this.resetField();\n  };\n\n  resetField = () => {\n    this.setState({ amount: '' });\n  };\n\n  balanceCalculation = () => {\n    const { history, type } = this.state;\n\n    return history.reduce(\n      (acc, item) => (item.type === type ? acc + item.amount : acc),\n      0,\n    );\n  };\n\n  render() {\n    const { history, amount, balance } = this.state;\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          state={amount}\n          addingMoney={this.handleAddingMoney}\n          onDeposit={this.handleDeposit}\n          onWithdrawal={this.handleWithdrawal}\n        />\n        <Balance\n          balance={balance}\n          balanceCalculation={this.balanceCalculation}\n        />\n        <TransactionHistory items={history} />\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './components/TransactionBanking/Dashboard';\n\nconst App = () => <Dashboard />;\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}